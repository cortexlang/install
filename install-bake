#!/bin/bash

set -eu

install_corto_fail() {
    echo "Installation failed :("
}

clone_repo() {
    if [ ! -d "$1" ]; then
        echo "Cloning $1..."
        git clone -q "https://github.com/cortoproject/${1}.git"
    else
        (
            cd "$1"
            echo "Reset $1..."
            git fetch -q origin
            git reset -q --hard origin/master
            git clean -q -xdf
        )
    fi
}

install_corto () {
    UNAME=$(uname)
    INSTALL_TMPDIR="$HOME/corto/src"

    # Check supported OS
    if [ "$UNAME" != "Linux" ] && [ "$UNAME" != "Darwin" ]; then
        >&2 echo "corto: sorry, this OS is not supported yet!"
        exit 1
    fi
    if [ "$UNAME" = "Darwin" ]; then
        if [ "i386" != "$(uname -p)" ] || [ "1" != "$(sysctl -n hw.cpu64bit_capable 2>/dev/null || echo 0)" ]; then
          >&2 echo "corto: only 64-bit Intel processors are supported at this time!"
          exit 1
        fi
    fi

    if [ "$UNAME" = "Linux" ]; then
        sudo apt-get -y install git build-essential libffi-dev libxml2-dev flex bison libcurl4-openssl-dev libssl-dev
    elif [ "$UNAME" = "Darwin" ]; then
        if ! pkgutil --pkg-info=com.apple.pkg.CLTools_Executables; then
            echo "Looks like Xcode command-line tools are not installed. Run:"
            echo "  sudo xcode-select --install"
            echo
            echo "Then try installing corto again!"
            exit 1
        fi
    fi

    echo
    echo "Installing bake, this should just take a minute..."

    # Remove existing (older) versions
    if corto --version; then
        echo "Removing existing bake installation"
        sudo rm -rf ~/.corto/bin ~/.corto/lib ~/.corto/etc ~/.bake
        sudo rm -rf ~/corto/bin ~/corto/lib ~/corto/etc
    fi

    trap install_corto_fail EXIT

    # Create 'src' directory in corto
    mkdir -p "$INSTALL_TMPDIR"
    cd "$INSTALL_TMPDIR"

    # Install bake
    echo "Cloning bake repositories"
    clone_repo "platform"
    clone_repo "bake"
    clone_repo "driver-bake-c"
    clone_repo "corto"

    echo "Installing bake"
    (
        cd bake
        if [ "$UNAME" = "Linux" ]; then
            make -C build-linux
        elif [ "$UNAME" = "Darwin" ]; then
            make -C build-darwin
        fi
    )

    # Corto repository is now downloaded. Download remaining essential packages
    echo "Cloning essential corto packages"
    clone_repo "corto-tool"
    clone_repo "argparse"
    clone_repo "parson"
    clone_repo "driver-tool-locate"
    clone_repo "driver-tool-list"
    clone_repo "driver-tool-create"
    clone_repo "cdiff"
    clone_repo "g"
    clone_repo "driver-tool-pp"
    clone_repo "c-binding"
    clone_repo "driver-fmt-json"
    clone_repo "driver-ext-json"

    # Build projects
    echo "Build projects"
    bake

    echo
    corto --logo
    echo
    echo "Bake successfully installed!"
    echo
    echo "Get started by creating your first project with these commands:"
    echo
    echo "   $ mkdir my_app"
    echo "   $ cd my_app"
    echo "   $ bake init"
    echo "   $ bake"
    echo

    trap - EXIT
}

install_corto
