#!/bin/sh
VERSION="0.2"

install_corto_fail() {
    echo
    >&2 echo "Installation failed :-("

    # If asking for password failed, don't ask again
    if sudo -n true 2>/dev/null; then
        true
    else
        echo "  If you do not have sudo privileges, or don't want to install"
        echo "  software to /usr/local, consider building Corto from source."
        echo
        echo "  Our code is on GitHub: https://www.github.com/cortoproject/corto"
        echo
        exit -1
    fi

    rm -rf "$INSTALL_TMPDIR"
    sudo rm -f "/usr/local/bin/corto"
    sudo rm -f "/usr/local/bin/corto.$VERSION"
    sudo rm -f "/usr/local/lib/libcorto.so"
    sudo rm -f "/usr/local/lib/libcorto.so.$VERSION"
    sudo rm -rf "/usr/local/lib/corto/$VERSION"
    sudo rm -rf "/usr/local/include/corto/$VERSION"
    sudo rm -rf "/usr/local/etc/corto/$VERSION"
    sudo rm -rf "$HOME/.corto"

    # Get rid of deprecated installation
    sudo rm -f "/usr/bin/corto"
    sudo rm -f "/usr/bin/corto.*"
    sudo rm -f "/usr/lib/libcorto.so"
    sudo rm -f "/usr/lib/libcorto.so.*"
    sudo rm -rf "/usr/lib/corto/*"
    sudo rm -rf "/usr/include/corto/*"
    sudo rm -rf "/usr/etc/corto/*"

    echo "  Maybe your internet connection failed, please retry ! If"
    echo "  the issue persists, maybe there is a problem with your platform. In"
    echo "  that case, it would be awesome if you can create an issue on"
    echo "  http://www.github.com/cortoproject/install! Please provide the output"
    echo "  of the installer, together with the output of 'uname' and 'uname -m'."
    echo
}

install_corto () {
    set -e
    set -u

    UNAME=$(uname)
    ARCHITECTURE=$(uname -m)
    PREFIX="/usr/local"
    FILENAME="corto"
    TARBALL_URL="https://raw.githubusercontent.com/cortoproject/binaries/master/packages/corto/$UNAME-$ARCHITECTURE/corto.tar.gz"
    INSTALL_TMPDIR="$HOME/.corto/.download"

    # Check supported OS
    if [ "$UNAME" != "Linux" -a "$UNAME" != "Darwin" ] ; then
        >&2 echo "corto: sorry, this OS is not supported yet!"
        exit 1
    fi
    if [ "$UNAME" = "Darwin" ] ; then
        if [ "i386" != "$(uname -p)" -o "1" != "$(sysctl -n hw.cpu64bit_capable 2>/dev/null || echo 0)" ] ; then
          >&2 echo "corto: only 64-bit Intel processors are supported at this time!"
          exit 1
        fi
    fi

    trap install_corto_fail EXIT

    echo
    echo "Hi! Downloading Corto distribution..."
    rm -rf "$INSTALL_TMPDIR"
    mkdir -p "$INSTALL_TMPDIR"

    curl --progress-bar --fail "$TARBALL_URL" | tar -xzf - -C "$INSTALL_TMPDIR"

    # Ask for password upfront
    if sudo -n true 2>/dev/null; then
        true
    else
        echo
        echo "Corto will now be installed to /usr/local for easy access."
        echo "This may prompt for your password."
        sudo true
        echo
    fi

    # Remove existing cortex version
    if [ "`which cortex`" != "" ]  ; then
        OLD_VERSION=`cortex -v`
        echo "Removing your existing cortex installation ($OLD_VERSION)"
        sudo rm -f "/usr/bin/cortex"
        sudo rm -f "/usr/bin/cortex.$OLD_VERSION"
        sudo rm -f "/usr/lib/libcortex.so"
        sudo rm -f "/usr/lib/libcortex.so.$OLD_VERSION"
        sudo rm -rf "/usr/lib/cortex/$OLD_VERSION"
        sudo rm -rf "/usr/include/cortex/$OLD_VERSION"
    fi

    # Remove existing versions
    if [ "`which corto`" != "" ]  ; then
        if [ "`corto -v`" != "0.2.0-alpha" ] ; then
            OLD_VERSION=`corto --minor`
        else
            OLD_VERSION=`corto -v`
        fi
        echo "Removing your existing corto installation ("`corto -v`")"
        sudo rm -f "/usr/local/bin/corto"
        sudo rm -f "/usr/local/bin/corto.$OLD_VERSION"
        sudo rm -f "/usr/local/lib/libcorto.so"
        sudo rm -f "/usr/local/lib/libcorto.so.$OLD_VERSION"
        sudo rm -rf "/usr/local/lib/corto/$OLD_VERSION"
        sudo rm -rf "/usr/local/include/corto/$OLD_VERSION"
        sudo rm -rf "/usr/local/etc/corto/$OLD_VERSION"
    fi

    mkdir -p "$HOME/.corto"
    sudo mkdir -p "$PREFIX/lib/corto/$VERSION"

    echo "Installing files..."
    sudo cp -a "$INSTALL_TMPDIR/." "/usr/local"
    rm -rf "$INSTALL_TMPDIR"
    sudo mv "/usr/local/bin/corto" "/usr/local/bin/corto.$VERSION"
    sudo ln -s "/usr/local/bin/corto.$VERSION" "/usr/local/bin/corto"
    echo

    echo "Corto "`corto -v`" successfully installed!"
    echo
    echo "Now create your first project with:"
    echo
    echo "   $ corto create myApp"
    echo "   $ cd myApp"
    echo "   $ corto run"
    echo
    echo "Or check out our docs at:"
    echo "   http://www.corto.io/doc.html"
    echo

    trap - EXIT
}

install_corto
